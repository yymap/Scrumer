<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsBtnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6f8BxyAMD1JcRvAAAAAASUVORK5CYII=
</value>
  </data>
</root>